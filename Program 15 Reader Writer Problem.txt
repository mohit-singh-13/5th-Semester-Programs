#include <iostream>
#include <pthread.h>
#include <semaphore.h>

using namespace std;

int sh_var = 5;
int readcount = 0, writecount = 0;

sem_t x, y, z, rsem, wsem;

void *reader(void *arg)
{
    int i = *((int *)arg);

    cout << "\n-------------------------";
    cout << "\n\n reader-" << i << " is reading";

    sem_wait(&z);
    sem_wait(&rsem);
    sem_wait(&x);
    readcount++;

    if (readcount == 1)
        sem_wait(&wsem);

    sem_post(&x);
    sem_post(&rsem);
    sem_post(&z);

    cout << "\nupdated value: " << sh_var;

    sem_wait(&x);
    readcount--;

    if (readcount == 0)
        sem_post(&wsem);

    sem_post(&x);

    return NULL;
}

void *writer(void *arg)
{
    int i = *((int *)arg);

    cout << "\n\n writer-" << i << " is writing";

    sem_wait(&y);
    writecount++;

    if (writecount == 1)
        sem_wait(&rsem);

    sem_post(&y);
    sem_wait(&wsem);

    sh_var = sh_var + 5;

    sem_post(&wsem);
    sem_wait(&y);

    writecount--;

    if (writecount == 0)
        sem_post(&rsem);

    sem_post(&y);

    return NULL;
}

int main()
{
    sem_init(&x, 0, 1);
    sem_init(&wsem, 0, 1);
    sem_init(&y, 0, 1);
    sem_init(&z, 0, 1);
    sem_init(&rsem, 0, 1);

    pthread_t r[5], w[2];
    int reader_ids[5] = {0, 1, 2, 3, 4};
    int writer_ids[2] = {0, 1};

    for (int i = 0; i < 5; ++i)
        pthread_create(&r[i], NULL, reader, (void *)&reader_ids[i]);

    for (int i = 0; i < 2; ++i)
        pthread_create(&w[i], NULL, writer, (void *)&writer_ids[i]);

    for (int i = 0; i < 5; ++i)
        pthread_join(r[i], NULL);

    for (int i = 0; i < 2; ++i)
        pthread_join(w[i], NULL);

    return 0;
}
