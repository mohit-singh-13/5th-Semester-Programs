#include<iostream>
using namespace std;

int partition(int arr[], int start, int end) {
    int pivot = arr[start];
    
    int count = 0;
    for (int i=start+1 ; i<=end ; i++) {
        if (arr[i] < pivot) {
            count++;
        }
    }
    
    int pivotIndex = start + count;
    swap(arr[pivotIndex], arr[start]);
    
    int i=start;
    int j=end;
    
    while (i<pivotIndex && j>pivotIndex) {
        while (arr[i] < pivot) {
            i++;
        }
        while (arr[j] > arr[count]) {
            j--;
        }
        
        if (i<pivotIndex && j>pivotIndex) {
            swap(arr[i], arr[j]);
            i++;
            j--;
        }
    }
    
    return pivotIndex;
}

void quickSort(int arr[], int start, int end) {
    if (start >= end) {
        return;
    }
    
    int p = partition(arr, start, end);

    quickSort(arr, start, p-1);
    quickSort(arr, p+1, end);
}

int main() {
    int size;
    cout << "Enter no. of elements : ";
    cin >> size;
    cout << endl;
    
    int *arr = new int[size];
    
    cout << "Enter array elements : ";
    for (int i=0 ; i<size ; i++) {
        cin >> arr[i];
    }
    
    int start = 0;
    int end = size - 1;
    
    quickSort(arr, start, end);
    
    cout << endl;
    cout << "Sorted array : ";
    for (int i=0 ; i<size ; i++) {
        cout << arr[i] << " ";
    }
    
    return 0;
}