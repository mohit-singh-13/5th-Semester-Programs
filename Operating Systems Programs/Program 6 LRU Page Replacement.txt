#include<iostream>
#include<vector>
#include<algorithm>
#include<climits>
using namespace std;

int LRU(vector<int> &referenceString, int numFrames)
{
    vector<int> frames(numFrames, -1);
    vector<int> lastUsed(referenceString.size(), 0);

    int pageFaults = 0;
    for (int i = 0; i < referenceString.size(); i++)
    {
        int page = referenceString[i];
        if (find(frames.begin(), frames.end(), page) == frames.end())
        {
            pageFaults++;
            int replaceIndex = -1;
            int minLastUsed = INT_MAX;
            for (int j = 0; j < numFrames; j++)
            {
                if (lastUsed[frames[j]] < minLastUsed)
                {
                    minLastUsed = lastUsed[frames[j]];
                    replaceIndex = j;
                }
            }
            frames[replaceIndex] = page;
        }
        lastUsed[page] = i;
    }
    return pageFaults;
}

int main()
{
    vector<int> referenceString = {7, 0, 1, 2, 0, 3, 0, 4, 2, 3, 0, 3, 2, 1, 2, 0, 1, 7, 0, 1};
    
    int numFrames = 4;
    int lruFaults = LRU(referenceString, numFrames);
    
    cout << "Page Faults with LRU: " << lruFaults << endl;
    
    return 0;
}